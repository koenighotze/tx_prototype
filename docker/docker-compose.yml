version: "2"

services:
  # influxdb:
  #   image: influxdb:1.1.4-alpine
  #   ports:
  #     - "8086:8086"
  #     #- "2003:2003"
#INFLUXDB_REPORTING_DISABLED=true
#INFLUXDB_META_DIR=/path/to/metadir
#INFLUXDB_DATA_QUERY_LOG_ENABLED=false

  # eventstore:
  #   image: eventstore/eventstore
  #   ports:
  #     - "2113:2113"
  #     - "1113:1113"

#  riakts:
#    image: basho/riak-ts
#    ports:
#      - "8087:8087"
#      - "8098:8098"
#
#  riakkv:
#      image: basho/riak-kv
#      ports:
#        - "8097:8087"
#        - "8099:8098"

  mongodb:
    container_name: mongodb
    image: mongo:3.2.4
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"

#  consul:
#    container_name: consul
#    image: progrium/consul
#    command: -server -bootstrap -ui-dir /ui
#    volumes:
#        - consul-data:/data
#    ports:
#      - "8500:8500"
#      - "8600:8600"
#      - "8400:8400"
#      - "8600:53/udp"

  # Keycloak
  keycloak-postgres:
    container_name: postgres
    image: postgres:9.6.2-alpine
    volumes:
          - keycloak-pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DATABASE=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
      - POSTGRES_ROOT_PASSWORD=root_password

  keycloak:
    container_name: keycloak
    image: jboss/keycloak-postgres:3.0.0.Final
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - POSTGRES_PORT_5432_TCP_ADDR=postgres
      - POSTGRES_PORT_5432_TCP_PORT=5432
    depends_on:
      - keycloak-postgres

    # kafka


    #  zookeeper:
    #    container_name: zookeeper
    #    image: wurstmeister/zookeeper
    #    ports:
    #      - "2181:2181"
    #
    #  kafka:
    #    container_name: kafka
    #    image: wurstmeister/kafka:0.10.0.1-2
    #    ports:
    #      - "9092:9092"
    #    environment:
    #      KAFKA_ADVERTISED_HOST_NAME: localhost
    #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #      KAFKA_CREATE_TOPICS: "users:1:1,transactions:1:1:compact"
    #    volumes:
    #      - /var/run/docker.sock:/var/run/docker.sock

#  zookeeper:
#    container_name: zookeeper
#    image: zookeeper:3.3.6
#    restart: always
#    ports:
#        - "2181:2181"
#    environment:
#        ZOO_MY_ID: 1
#
#  kafka:
#    container_name: kafka
#    image: wurstmeister/kafka:0.10.0.1-2
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "users:1:1,transactions:1:1:compact"
#    depends_on:
#          - zookeeper
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

volumes:
    mongodb-data:
    consul-data:
    keycloak-pgdata:

